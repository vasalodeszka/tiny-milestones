name: tiny_milestones_prod

volumes:
  postgres_data: {}
  django_media: {}
  django_static: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/prod/django/Dockerfile
    image: tiny_milestones_prod_django
    container_name: prod_django
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.envs/.prod/.django
      - ./.envs/.prod/.postgres
    command: /start
    ports:
      - "5000"
    volumes:
      - django_static:/app/staticfiles

  postgres:
    image: postgres:17.5@sha256:6efd0df010dc3cb40d5e33e3ef84acecc5e73161bd3df06029ee8698e5e12c60
    container_name: prod_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.prod/.postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 3s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: ./compose/prod/nginx/Dockerfile
    container_name: nginx
    depends_on:
      - django
    volumes:
      - django_media:/usr/share/nginx/media:ro
      - django_static:/usr/share/nginx/static:ro
    ports:
      - "80:80"
      - "443:443"
